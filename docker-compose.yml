version: "3.9"

services:
  backend:
    build:
      context: ./PARTY/backend
      dockerfile: Dockerfile
      args:
        - DEV=true
    container_name: django_back
    command: >
      sh -c  "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    # environment:
    #   - DB_HOST=db
    #   - DB_NAME=${DATABASE_NAME}
    #   - DB_USER=${DATABASE_USER}
    #   - DB_PASS=${DATABASE_PASSWORD}
    restart: on-failure
    volumes:
      - ./PARTY/backend:/app
    ports:
      - 8000:8000
    networks:
      - party_network
    depends_on:
      - db
      - cache

  db:
    image: postgres:15-alpine3.17
    container_name: postgres_db
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    restart: on-failure
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - party_network

  cache:
    # image: redis:7.0-alpine
    image: bitnami/redis:7.0.7
    container_name: redis_cache
    # command: redis-server --requirepass sOmE_sEcUrE_pAsS
    # command: redis-server
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 100mb
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_IO_THREADS=2
      - REDIS_IO_THREADS_DO_READS=yes
      - REDIS_AOF_ENABLE=no
      - REDIS_PORT_NUMBER=6379
      # - REDIS_PASSWORD=sOmE_sEcUrE_pAsS
    restart: always
    ports:
      - 6379:6379
    networks:
      - party_network

  frontend:
    container_name: react_front
    build:
      context: ./PARTY/front
      dockerfile: Dockerfile
    command: npm start
    # environment:
    #   CHOKIDAR_USEPOLLING: "true"
    env_file:
      - .env
    restart: always
    volumes:
      - ./PARTY/front:/app:ro
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - backend
      - db
    networks:
      - party_network

networks:
  party_network:
    driver: bridge

volumes:
  pgdata:
