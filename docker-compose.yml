version: '3.9'

services:

  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: party_app
    command: python3 manage.py runserver_plus 0.0.0.0:8000
    env_file:
      - .env
    restart: on-failure
    # environment:
      # - DB_ADAPTER: "postgis"
    # command: python manage.py migrate
    # command: python manage.py runserver_plus
    volumes:
      - .:/app
    ports:
      - 8000:8000
    networks:
      - party_network
    depends_on:
      - db

  # db:
  #   image: postgres:14-alpine
  #   # container_name: party_DB
  #   environment:
  #     - POSTGRES_DB=${DATABASE_NAME}
  #     - POSTGRES_USER=${DATABASE_USER}
  #     - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
  #     # - POSTGRES_HOST=${DATABASE_HOST}
  #     - POSTGRES_HOST_AUTH_METHOD=trust
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - dj_network

  db:
    image: kartoza/postgis:12.1
    # container_name: party_db
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      # - POSTGRES_HOST=${DATABASE_HOST}
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql
    # ports:
      # - 5432:5432
    networks:
      - party_network



networks:
  party_network:
    driver: bridge

volumes:
  postgres_data: